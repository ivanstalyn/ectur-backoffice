version: "3.7"

services:
  ectur-db:
    image: postgres:13.6
    container_name: ectur-db-server
    hostname: db.ectur
    restart: unless-stopped
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_USER=ecturuser
      - POSTGRES_PASSWORD=ectur-clave!.-
      - POSTGRES_DB=ecturdb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - type: volume
        source: ectur-db-data
        target: /var/lib/postgresql/data
        volume:
          nocopy: true

  ectur-backoffice:
    image: ivanstalyn/ectur-backoffice:1.0
    container_name: ectur-backoffice-server
    hostname: backoffice.ectur
    restart: unless-stopped
    environment:
      - JPA_DRIVER=org.postgresql.Driver
      - JPA_URL=jdbc:postgresql://db.ectur:5432/ecturdb
      - JPA_USUARIO=ecturuser
      - JPA_PASSWORD=ectur-clave!.-
    depends_on:
      - ectur-db
    links:
      - ectur-db

  ectur-ws:
    image: ivanstalyn/ectur-ws:1.0
    container_name: ectur-ws-server
    hostname: backofficews.ectur
    restart: unless-stopped
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db.ectur:5432/ecturdb
      - SPRING_DATASOURCE_USERNAME=ecturuser
      - SPRING_DATASOURCE_PASSWORD=ectur-clave!.-
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - ectur-db
    links:
      - ectur-db

  ectur-nginx:
    image: ivanstalyn/ectur-proxy:1.0
    container_name: ectur-nginx-server
    hostname: nginx.ectur
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - type: volume
        source: ectur-imagenes
        target: /var/www/imagenes
        volume:
          nocopy: true
    depends_on:
      - ectur-db
      - ectur-backoffice
      - ectur-ws
    links:
      - ectur-db
      - ectur-backoffice
      - ectur-ws

volumes:
  ectur-db-data:
    driver_opts:
      type: none
      o: "bind"
      device: "/home/ivanstalyn/ectur/postgres"
  ectur-imagenes:
    driver_opts:
      type: none
      o: "bind"
      device: "/home/ivanstalyn/ectur/www/imagenes"
